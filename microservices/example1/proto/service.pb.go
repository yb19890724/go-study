// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetReleaseInfoRequest struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReleaseInfoRequest) Reset()         { *m = GetReleaseInfoRequest{} }
func (m *GetReleaseInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetReleaseInfoRequest) ProtoMessage()    {}
func (*GetReleaseInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *GetReleaseInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReleaseInfoRequest.Unmarshal(m, b)
}
func (m *GetReleaseInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReleaseInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetReleaseInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReleaseInfoRequest.Merge(m, src)
}
func (m *GetReleaseInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetReleaseInfoRequest.Size(m)
}
func (m *GetReleaseInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReleaseInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReleaseInfoRequest proto.InternalMessageInfo

func (m *GetReleaseInfoRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type ListReleasesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReleasesRequest) Reset()         { *m = ListReleasesRequest{} }
func (m *ListReleasesRequest) String() string { return proto.CompactTextString(m) }
func (*ListReleasesRequest) ProtoMessage()    {}
func (*ListReleasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *ListReleasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleasesRequest.Unmarshal(m, b)
}
func (m *ListReleasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleasesRequest.Marshal(b, m, deterministic)
}
func (m *ListReleasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleasesRequest.Merge(m, src)
}
func (m *ListReleasesRequest) XXX_Size() int {
	return xxx_messageInfo_ListReleasesRequest.Size(m)
}
func (m *ListReleasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleasesRequest proto.InternalMessageInfo

type ListReleasesResponse struct {
	Releases             []*ReleaseInfo `protobuf:"bytes,1,rep,name=releases,proto3" json:"releases,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListReleasesResponse) Reset()         { *m = ListReleasesResponse{} }
func (m *ListReleasesResponse) String() string { return proto.CompactTextString(m) }
func (*ListReleasesResponse) ProtoMessage()    {}
func (*ListReleasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *ListReleasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReleasesResponse.Unmarshal(m, b)
}
func (m *ListReleasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReleasesResponse.Marshal(b, m, deterministic)
}
func (m *ListReleasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReleasesResponse.Merge(m, src)
}
func (m *ListReleasesResponse) XXX_Size() int {
	return xxx_messageInfo_ListReleasesResponse.Size(m)
}
func (m *ListReleasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReleasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReleasesResponse proto.InternalMessageInfo

func (m *ListReleasesResponse) GetReleases() []*ReleaseInfo {
	if m != nil {
		return m.Releases
	}
	return nil
}

type ReleaseInfo struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ReleaseDate          string   `protobuf:"bytes,2,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	ReleaseNotesUrl      string   `protobuf:"bytes,3,opt,name=release_notes_url,json=releaseNotesUrl,proto3" json:"release_notes_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseInfo) Reset()         { *m = ReleaseInfo{} }
func (m *ReleaseInfo) String() string { return proto.CompactTextString(m) }
func (*ReleaseInfo) ProtoMessage()    {}
func (*ReleaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *ReleaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseInfo.Unmarshal(m, b)
}
func (m *ReleaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseInfo.Marshal(b, m, deterministic)
}
func (m *ReleaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseInfo.Merge(m, src)
}
func (m *ReleaseInfo) XXX_Size() int {
	return xxx_messageInfo_ReleaseInfo.Size(m)
}
func (m *ReleaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseInfo proto.InternalMessageInfo

func (m *ReleaseInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ReleaseInfo) GetReleaseDate() string {
	if m != nil {
		return m.ReleaseDate
	}
	return ""
}

func (m *ReleaseInfo) GetReleaseNotesUrl() string {
	if m != nil {
		return m.ReleaseNotesUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*GetReleaseInfoRequest)(nil), "proto.GetReleaseInfoRequest")
	proto.RegisterType((*ListReleasesRequest)(nil), "proto.ListReleasesRequest")
	proto.RegisterType((*ListReleasesResponse)(nil), "proto.ListReleasesResponse")
	proto.RegisterType((*ReleaseInfo)(nil), "proto.ReleaseInfo")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc7, 0x1b, 0x8b, 0x5f, 0x93, 0xfa, 0x35, 0x5a, 0x58, 0xa2, 0x87, 0xba, 0xa7, 0xe2, 0x21,
	0x60, 0x7d, 0x85, 0x62, 0x29, 0x88, 0x87, 0x88, 0xe7, 0x12, 0x75, 0x84, 0x40, 0xd8, 0xad, 0x3b,
	0xdb, 0xbc, 0x90, 0x2f, 0x2a, 0x6e, 0x26, 0x92, 0xc0, 0x7a, 0x0a, 0xf9, 0x7f, 0x30, 0xff, 0xfd,
	0xc1, 0x09, 0x93, 0x6b, 0xaa, 0x77, 0xca, 0xb7, 0xce, 0x7a, 0x8b, 0xfb, 0xe1, 0xa3, 0xef, 0x61,
	0xba, 0x22, 0x5f, 0x50, 0x4d, 0x25, 0xd3, 0xda, 0x7c, 0xda, 0x82, 0xbe, 0x76, 0xc4, 0x1e, 0x15,
	0x1c, 0x36, 0xe4, 0xb8, 0xb2, 0x46, 0x25, 0xb3, 0x64, 0x7e, 0x5c, 0x74, 0xbf, 0x7a, 0x0a, 0x97,
	0x4f, 0x15, 0x77, 0x1d, 0x96, 0x82, 0x7e, 0x84, 0xab, 0xa1, 0xcc, 0x5b, 0x6b, 0x98, 0x30, 0x87,
	0x23, 0x27, 0x9a, 0x4a, 0x66, 0xe3, 0x79, 0xba, 0xc0, 0x76, 0x42, 0xde, 0xbf, 0xfa, 0x97, 0xd1,
	0x0d, 0xa4, 0x3d, 0xe3, 0xff, 0x1d, 0x78, 0x0b, 0x13, 0x29, 0x6d, 0x3e, 0x4a, 0x4f, 0x6a, 0x2f,
	0xd8, 0xa9, 0x68, 0xcb, 0xd2, 0x13, 0xde, 0xc1, 0x45, 0x17, 0x31, 0xd6, 0x13, 0x6f, 0x76, 0xae,
	0x56, 0xe3, 0x90, 0x3b, 0x13, 0xe3, 0xf9, 0x57, 0x7f, 0x75, 0xf5, 0xe2, 0x3b, 0x81, 0xf3, 0x95,
	0x95, 0xd3, 0x2f, 0x2d, 0x2b, 0x5c, 0xc2, 0xe9, 0x10, 0x0f, 0xde, 0xc8, 0xf8, 0x28, 0xb5, 0x2c,
	0xf2, 0x34, 0x3d, 0xc2, 0x35, 0x4c, 0xfa, 0x68, 0x30, 0x93, 0x54, 0x04, 0x63, 0x76, 0x1d, 0xf5,
	0x5a, 0x96, 0x7a, 0xf4, 0x76, 0x10, 0xdc, 0x87, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x7d,
	0x14, 0xa1, 0xce, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoReleaseServiceClient is the client API for GoReleaseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoReleaseServiceClient interface {
	GetReleaseInfo(ctx context.Context, in *GetReleaseInfoRequest, opts ...grpc.CallOption) (*ReleaseInfo, error)
	ListReleases(ctx context.Context, in *ListReleasesRequest, opts ...grpc.CallOption) (*ListReleasesResponse, error)
}

type goReleaseServiceClient struct {
	cc *grpc.ClientConn
}

func NewGoReleaseServiceClient(cc *grpc.ClientConn) GoReleaseServiceClient {
	return &goReleaseServiceClient{cc}
}

func (c *goReleaseServiceClient) GetReleaseInfo(ctx context.Context, in *GetReleaseInfoRequest, opts ...grpc.CallOption) (*ReleaseInfo, error) {
	out := new(ReleaseInfo)
	err := c.cc.Invoke(ctx, "/proto.GoReleaseService/GetReleaseInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goReleaseServiceClient) ListReleases(ctx context.Context, in *ListReleasesRequest, opts ...grpc.CallOption) (*ListReleasesResponse, error) {
	out := new(ListReleasesResponse)
	err := c.cc.Invoke(ctx, "/proto.GoReleaseService/ListReleases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoReleaseServiceServer is the server API for GoReleaseService service.
type GoReleaseServiceServer interface {
	GetReleaseInfo(context.Context, *GetReleaseInfoRequest) (*ReleaseInfo, error)
	ListReleases(context.Context, *ListReleasesRequest) (*ListReleasesResponse, error)
}

// UnimplementedGoReleaseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGoReleaseServiceServer struct {
}

func (*UnimplementedGoReleaseServiceServer) GetReleaseInfo(ctx context.Context, req *GetReleaseInfoRequest) (*ReleaseInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReleaseInfo not implemented")
}
func (*UnimplementedGoReleaseServiceServer) ListReleases(ctx context.Context, req *ListReleasesRequest) (*ListReleasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReleases not implemented")
}

func RegisterGoReleaseServiceServer(s *grpc.Server, srv GoReleaseServiceServer) {
	s.RegisterService(&_GoReleaseService_serviceDesc, srv)
}

func _GoReleaseService_GetReleaseInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReleaseInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoReleaseServiceServer).GetReleaseInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.GoReleaseService/GetReleaseInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoReleaseServiceServer).GetReleaseInfo(ctx, req.(*GetReleaseInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoReleaseService_ListReleases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReleasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoReleaseServiceServer).ListReleases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.GoReleaseService/ListReleases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoReleaseServiceServer).ListReleases(ctx, req.(*ListReleasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoReleaseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.GoReleaseService",
	HandlerType: (*GoReleaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetReleaseInfo",
			Handler:    _GoReleaseService_GetReleaseInfo_Handler,
		},
		{
			MethodName: "ListReleases",
			Handler:    _GoReleaseService_ListReleases_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
